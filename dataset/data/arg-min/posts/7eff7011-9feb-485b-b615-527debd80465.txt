<article class="post-content">
<p><em>This is the first part of <a href="http://www.argmin.net/outsider-rl.html">“An Outsider’s Tour of Reinforcement Learning.”</a>  Part 2 is <a href="http://www.argmin.net/2018/02/01/control-tour/">here</a>.</em></p>
<p>If you read hacker news, you’d think that deep reinforcement learning can be used to solve any problem.  Deep RL has claimed to <a href="https://deepmind.com/research/alphago/">achieve superhuman performance on Go</a>, <a href="https://deepmind.com/research/publications/playing-atari-deep-reinforcement-learning/">beat atari games</a>, <a href="https://blog.openai.com/generalizing-from-simulation/">control complex robotic systems</a>, <a href="https://research.googleblog.com/2017/11/automl-for-large-scale-image.html">automatically tune deep learning systems</a>, <a href="https://www.microsoft.com/en-us/research/publication/resource-management-deep-reinforcement-learning/">manage queueing in network stacks</a>, and <a href="https://deepmind.com/blog/deepmind-ai-reduces-google-data-centre-cooling-bill-40/">improve energy efficiency in data centers</a>. What a miraculous technology! I personally get suspicious when audacious claims like this are thrown about in press releases, and I get even more suspicious when <a href="https://arxiv.org/abs/1709.06560">other researchers call into question their reproducibility</a>. I want to take a few posts to unpack what is legitimately interesting and promising in RL and what is probably just hype. I also want to take this opportunity to argue in favor of more of us working on RL: some of the most important and pressing problems in machine learning are going to require solving exactly the problems RL sets out to solve.</p>
<p>Reinforcement learning trips people up because it requires thinking about core concepts that are not commonly discussed in a first course on machine learning. First, you have to think about statistical models that evolve over time, and understand the nature of dependencies in data that is temporally correlated. Second, you need to understand feedback in statistical learning problems, and this makes all of the analysis challenging.  When there is feedback, the distribution of the observations changes with every action taken, and an RL system must adapt to these actions.  Both of these are complex challenges, and I’m going to spend time discussing both. Indeed, I can use both of these concepts to introduce RL from seemingly unrelated starting points. In this post, I’ll dive into RL as a form of <em>predictive analytics</em>. In the next post, I’ll describe RL as a form of <em>optimal control</em>. Both derivations will highlight how RL is different from the machine learning with which we are most familiar.</p>
<h2 id="reinforcement-learning-as-predictive-analytics">Reinforcement Learning As Predictive Analytics</h2>
<p>Chris Wiggins introduced a <a href="https://www.slideshare.net/chrishwiggins/machine-learning-summer-school-2016/75">brilliant taxonomy of ML</a> that I find rather clarifying.</p>
<p>There are three main pillars of machine learning: unsupervised, supervised, and reinforcement learning. There are few other kinds of machine learning that are connected to one of these three core categories—notably semi-supervised learning and active learning—but I think this trichotomy nicely covers most of the current research in machine learning.</p>
<p class="center"><img alt="The ML Taxonomy" src="/assets/rl/taxonomy.png" width="420px"/></p>
<p>What is the difference between each of these?  In all three cases, you are given access to some table of data where the rows index examples and the columns index features (or attributes) of the data.</p>
<p>In unsupervised learning, the goal is to summarize the examples. We can say that each row has a list of attributes <strong><em>x</em></strong>, and the goal is to create a shorter list of attributes <strong><em>z</em></strong> for each example that somehow summarizes the salient information in <strong><em>x</em></strong>. The features in <strong><em>z</em></strong> could be assignment to clusters or some sort of mapping of the example into a two dimensional state for plotting.</p>
<p class="center"><img alt="recent bedroom" height="160px" src="/assets/rl/bedroom.png" width="160px"/>
<img alt="hot topic" height="160px" src="/assets/rl/ml-word-cloud.jpg" width="160px"/>
<img alt="so delicious" height="160px" src="/assets/rl/swiss-roll.png" width="160px"/></p>
<p>In supervised learning, one of the columns is special. This is the feature which we’d like to predict from the other features. The goal is to predict <strong><em>y</em></strong> from <strong><em>x</em></strong> such that on new data you are accurately predicting <strong><em>y</em></strong>. This is the form of machine learning we’re most familiar with and includes classification and regression as special cases.</p>
<p>In reinforcement learning, there are two special columns, <strong><em>a</em></strong> and <strong><em>r</em></strong>. The goal is to analyze <strong><em>x</em></strong> and then subsequently choose <strong><em>a</em></strong> so that <strong><em>r</em></strong> is large. There are an endless number of problems where this formulation is applied from online decision making in games to immoral engagement maximization on the web.</p>
<p>The broader field of data science has terminology for all of these analytical procedures as well. Indeed, much of ML fits cleanly inside bins of data analytics, laid out in terms of difficulty and value in this chart which I have adapted from a famous infographic of Gartner:</p>
<p class="center"><img alt="infographix, yo." src="/assets/rl/gartner.png" width="450px"/></p>
<p><em>Descriptive</em> analytics refers to summarizing data in a way to make it more interpretable. Unsupervised learning is a form of descriptive analytics. <em>Predictive</em> analytics aims to estimate outcomes from current data. Supervised learning is a kind of predictive analytics. Finally, <em>prescriptive</em> analytics guides actions to take in order to guarantee outcomes. RL as described here falls into this bucket.</p>
<p>Note that the value assessments in this chart seems to fly in the face of conventional wisdom in machine learning (e.g., <a href="https://www.axios.com/artificial-intelligence-pioneer-says-we-need-to-start-over-1513305524-f619efbd-9db0-4947-a9b2-7a4c310a28fe.html">1</a>, <a href="https://twitter.com/ylecun/status/701189938965041152">2</a>, <a href="https://www.reddit.com/r/MachineLearning/comments/2fxi6v/ama_michael_i_jordan/ckep3z6/">3</a>,
<a href="https://www.wired.com/2016/04/openai-elon-musk-sam-altman-plan-to-set-artificial-intelligence-free/">4</a> ). But the conventional wisdom is wrong, and it’s important that we correct it. According to Gartner, business leaders, and your humble blogger, <em>unsupervised</em> learning is by far the easiest of the three types of machine learning problems because the stakes are so low. If all you need to do is summarize, there is no wrong answer. Whether or not your bedrooms are rendered correctly by a GAN has no impact on anything. Descriptive analytics and unsupervised learning lean more on aesthetics and less on concrete targets. Predictive analysis and supervised learning are <em>more</em> challenging as we can evaluate accuracy in a principled manner on new data.</p>
<p>The most challenging form of analytics and the one that can return the most value is prescriptive analytics. The value proposition is clear: prescriptive analysis and reinforcement learning demand interventions with the promise that these actions will directly lead to valuable returns. Prescriptive analysis consumes new data about and uncertain and evolving environment, makes predictions, and uses these predictions to impact the world. Such systems promise plentiful rewards for good decisions, but the complicated feedback arising from the interconnection is hard to study in theory, and failures can lead to catastrophic consequences. In real computing systems, whether they be  autonomous transportation system or seemingly mundane social engagement systems like Facebook, actively interacting with reality has considerably higher stakes than scatter plotting a static data set for a PowerPoint presentation.</p>
<p>Indeed, this is why I’ve been so obsessed with understanding RL for the past few years. RL provides a useful framework to conceptualize interaction in machine learning. As I’ve been hammering on for a while now, we have to take responsibility for our machine learning systems and understand what happens when we set them loose on the world. The stakes couldn’t be higher, and I think that understanding a bit more about RL can help us build safer machine learning systems in general. For these reasons, I do hope you’ll humor me in sticking it out for my outsider’s tour of the area. You can start with <a href="http://www.argmin.net/2018/02/01/control-tour/">Part 2</a>, where I describe reinforcement learning from the perspective of optimal control.</p>
</article>